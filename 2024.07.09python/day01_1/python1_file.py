'''
    데이터/자료

    데이터 타입, 자료형 타입
    - 기본 타입:
        int(정수), float(실수), string(문자열), boolean(논리_True, False), None(없다)
    - 참조 타입:
        list : []
        tuple: ()
        dict: {'key':'value'}
        객체:
             class _Object:
                def __init__(self, props1):
                    self.props1 = props1
                _Object(value)
'''
class _object:
    def __init__(self, props1):
        self.props1 = props1

a = _object(10)

'''
    저장
        -목적: 재활용/재사용을 위함
        1. 데이터/자료 저장
            - 변수: 하나의 자료를 저장하는 식별의 역할
            - 종류: 
                - 일반 변수(unlocal):함수 밖에서 선언된 변수
                    - 모든 함수 안에서 호출 가능
                - 지역 변수(local)  : 함수 안에서 선언된 변수
                    - 함수 밖에서 호출 불가능
                - 전역 변수(global) : 함수 밖/안에서 선언된 변수(어디서든 선언)
                    - 모든 함수에서 호출 가능
        2. 코드 저장
            - 함수: 여러 실행문/코드들을 하나의 구역에 정의한 것
            - 핵심: 매개 변수 & 리턴
                - 매개 변수: 함수 안으로 들어오는 정해져 있지 않는 값을 가지는 변수 = 인자/인수
                - 리턴(return): 함수를 호출했던 곳으로 반환하는 값, 1번만 실행, 자료 1개, 함수 종료
                    -- 기능/코드를 처리하기 위한 입력(매개 변수)과 출력(리턴)을 고민 해야함--

'''
# 1. 변수의 저장
# 변수의 10이라는 자료 1개가 저장/대입됨
var1 = 10
# 변수의 [10,20] 자료를 2개 갖는 리스트 자료 1개 저장/대입됨
var2 = [10,20]

# 2. 변수의 유효성 범위
전역변수 = '전역변수'
def method1():
    지역변수 = '지역변수'
    global 글로벌변수
    글로벌변수 = '글로벌 변수'
    print(전역변수)

method1()
# print(지역변수) # 함수 안에서 선언된 변수는 함수 밖에서 호출 불가
print(글로벌변수) # 함수 안에서 선언되었으나 global 키워드는 모든곳에서 호출 가능

# 3. 함수
# method2: 매개변수 없음, retrun 없음
def method2():
    print("여러가지 코드")

# method3: 매개변수가: x, retrun 없음
def method3(x):
    print('여러가지 코드')

# method4(x): 매개변수: x, retrun: x+10
def method4(x):
    print('여러가지 코드')
    return x+10

# method5: 매개변수 없음, retrun: HI
def method5():
    print('여러가지 코드')
    return "HI"

# 예시: 식당 서빙 함수
    # 손님 주문 받을 때: 음식 이름 받기
    # 우리 가게에는 콜라와 사이다만 존재 ==> 그 외 주문 받지 않고, 고객에게 '존재하지 않는 제품입니다' 라고 말하기
def 주문받기(음식이름, 금액):
    if 음식이름 == '콜라':
        요리하기() # 함수 안에서 함수 호출 가능
    elif 음식이름 == '사이다':
        요리하기()
    else:
        return '존재하지 않는 제품입니다'

def 요리하기():
    print('요리중')